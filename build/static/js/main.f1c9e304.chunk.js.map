{"version":3,"sources":["components/Gender.jsx","components/Name.jsx","components/Organization.jsx","components/Conditions.jsx","components/Page.jsx","utils/utils.js","App.js","reportWebVitals.js","index.js"],"names":["Gender","gender","id","className","Name","name","map","person","Fragment","given","family","Organization","managingOrganization","display","Conditions","conditions","length","condition","ParsedContent","file","identifier","identity","value","Page","props","useState","setFile","show","setShow","type","onChange","e","fileReader","FileReader","readAsText","target","files","onload","json","JSON","parse","isJSON","result","alert","disabled","onClick","event","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAceA,EAZA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAKA,EAIH,sBAAKC,GAAG,SAAR,UACE,4CACA,+BAAOD,OALF,qBAAKE,UAAU,UAAf,kCCgBIC,EAlBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OAAKA,EAIH,sBAAKH,GAAG,OAAR,UACE,qDACA,+BACGG,EAAKC,KAAI,SAAAC,GAAM,OACd,cAAC,IAAMC,SAAP,UACE,yCAAUD,EAAOE,MAAjB,YAA0BF,EAAOG,WADdH,EAAOG,gBAP3B,qBAAKP,UAAU,UAAf,6BCUIQ,EAZM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBACtB,OAAKA,EAIH,sBAAKV,GAAG,eAAR,UACE,uDACA,+BAAOU,EAAqBC,aALvB,qBAAKV,UAAU,UAAf,wCCoBIW,EAtBI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OAAKA,EAIH,qCACE,sBAAKb,GAAG,kBAAR,UACE,oEACA,+BAAOa,EAAWC,YAEpB,sBAAKd,GAAG,qBAAR,UACE,yDACA,6BACGa,EAAWT,KAAI,SAAAW,GAAS,OACvB,6BAAqBA,GAAZA,cAZV,qBAAKd,UAAU,UAAf,sCC6CLe,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,IAAKA,EAAKC,WAAY,OAAO,gDAC7B,IAAMA,EAAaD,EAAKC,WACxB,OACE,qBAAKlB,GAAG,iBAAR,SACGkB,EAAWd,KAAI,SAAAe,GAAQ,OACtB,eAAC,IAAMb,SAAP,WACE,cAAC,EAAD,CAA2BH,KAAMgB,EAAShB,MAA/BgB,EAASC,OACpB,cAAC,EAAD,CAAcV,qBAAsBS,EAAST,uBAC7C,cAAC,EAAD,CAAQX,OAAQoB,EAASpB,SACzB,cAAC,EAAD,CAAYc,WAAYM,EAASN,eAJdM,EAASC,aAWvBC,EA1DF,SAAAC,GAAS,MAEIC,mBAAS,MAFb,mBAEbN,EAFa,KAEPO,EAFO,OAIID,oBAAS,GAJb,mBAIbE,EAJa,KAIPC,EAJO,KAyBpB,OACE,qCACE,gCACE,oBAAI1B,GAAG,aAAP,yCACA,sBAAKA,GAAG,YAAR,UACE,uBAAO2B,KAAK,OAAOC,SAvBN,SAAAC,GACnB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,WAAWH,EAAEI,OAAOC,MAAM,GAAI,SACzCJ,EAAWK,OAAS,SAAAN,ICZF,SAAAO,GACpB,IACEC,KAAKC,MAAMF,GACX,SACA,OAAO,EAET,OAAO,EDQCG,CAAOV,EAAEI,OAAOO,QAGlBC,MAAM,2BAFNjB,EAAQa,KAAKC,MAAMT,EAAEI,OAAOO,aAkB1B,wBAAQE,UAAWzB,EAAM0B,QAVb,SAAAC,GAClBlB,GAAQ,SAAAmB,GAAI,OAAKA,MASoC7C,GAAG,YAAlD,SACIyB,EAAiB,OAAV,gBAIf,8BAAMA,GAAQ,cAAC,EAAD,CAAeR,KAAMA,UErC1B6B,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1c9e304.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Gender = ({ gender }) => {\n  if (!gender) {\n    return <div className=\"warning\">Gender not found :(</div>;\n  }\n  return (\n    <div id=\"gender\">\n      <span>Gender: </span>\n      <span>{gender}</span>\n    </div>\n  );\n};\n\nexport default Gender;\n","import React from \"react\";\n\nconst Name = ({ name }) => {\n  if (!name) {\n    return <div className=\"warning\">Name not found</div>;\n  }\n  return (\n    <div id=\"name\">\n      <span>Name of Patient: </span>\n      <span>\n        {name.map(person => (\n          <React.Fragment key={person.family}>\n            <span>{`${person.given} ${person.family}`}</span>\n          </React.Fragment>\n        ))}\n      </span>\n    </div>\n  );\n};\n\nexport default Name;\n","import React from \"react\";\n\nconst Organization = ({ managingOrganization }) => {\n  if (!managingOrganization) {\n    return <div className=\"warning\">Organization not found :(</div>;\n  }\n  return (\n    <div id=\"organization\">\n      <span>Organization name: </span>\n      <span>{managingOrganization.display}</span>\n    </div>\n  );\n};\n\nexport default Organization;\n","import React from \"react\";\n\nconst Conditions = ({ conditions }) => {\n  if (!conditions) {\n    return <div className=\"warning\">Conditions not found :(</div>;\n  }\n  return (\n    <>\n      <div id=\"no-of-condtions\">\n        <span>Number of conditions they have: </span>\n        <span>{conditions.length}</span>\n      </div>\n      <div id=\"list-of-conditions\">\n        <p>List of all conditions: </p>\n        <ul>\n          {conditions.map(condition => (\n            <li key={condition}>{condition}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Conditions;\n","import React, { useState } from \"react\";\nimport Gender from \"./Gender\";\nimport Name from \"./Name\";\nimport Organization from \"./Organization\";\nimport Conditions from \"./Conditions\";\n\nimport { isJSON } from \"../utils/utils\";\n\nconst Page = props => {\n  // state to save uploaded file contents as JSON\n  const [file, setFile] = useState(null);\n  // state to control visibility of parsed JSON\n  const [show, setShow] = useState(false);\n\n  // handler to read from file input\n  const handleChange = e => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      // checks if input file is json\n      if (isJSON(e.target.result)) {\n        setFile(JSON.parse(e.target.result));\n      } else {\n        alert(\"Only accepts JSON files\");\n      }\n    };\n  };\n\n  // handler to show/hide parsed Content\n  const showHandler = event => {\n    setShow(prev => !prev);\n  };\n\n  return (\n    <>\n      <div>\n        <h1 id=\"page-title\">Select a JSON file to parse</h1>\n        <div id=\"input-btn\">\n          <input type=\"file\" onChange={handleChange} />\n          <button disabled={!file} onClick={showHandler} id=\"parse-btn\">\n            {!show ? \"Parse\" : \"Hide\"}\n          </button>\n        </div>\n      </div>\n      <div>{show && <ParsedContent file={file} />}</div>\n    </>\n  );\n};\n\nconst ParsedContent = ({ file }) => {\n  if (!file.identifier) return <div>No Identifier</div>;\n  const identifier = file.identifier;\n  return (\n    <div id=\"parsed-content\">\n      {identifier.map(identity => (\n        <React.Fragment key={identity.value}>\n          <Name key={identity.value} name={identity.name} />\n          <Organization managingOrganization={identity.managingOrganization} />\n          <Gender gender={identity.gender} />\n          <Conditions conditions={identity.conditions} />\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default Page;\n","/*\n  Checks if the input is in JSON format\n  @params: json: string \n  returns: boolean\n*/\n\nexport const isJSON = json => {\n  try {\n    JSON.parse(json);\n  } catch {\n    return false;\n  }\n  return true;\n};\n","import \"./App.css\";\nimport Page from \"./components/Page\";\n\nfunction App() {\n  return <Page />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}